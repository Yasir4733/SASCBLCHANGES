ALTER TABLE sooperwizer_demo.piece_wise_cut_report
ADD COLUMN StyleTemplateID INT,
ADD CONSTRAINT FK_PieceWiseCutReport_StyleTemplate
FOREIGN KEY (StyleTemplateID) REFERENCES style_template(StyleTemplateID);



ALTER TABLE ilapparelsooperwizerdev.piece_wise_cut_report
ADD COLUMN StyleTemplateID INT,
ADD CONSTRAINT FK_PieceWiseCutReport_StyleTemplate
FOREIGN KEY (StyleTemplateID) REFERENCES style_template(StyleTemplateID);


ALTER TABLE ilapparel_sooperwizer.piece_wise_cut_report
ADD COLUMN StyleTemplateID INT,
ADD CONSTRAINT FK_PieceWiseCutReport_StyleTemplate
FOREIGN KEY (StyleTemplateID) REFERENCES style_template(StyleTemplateID);




-- Sql Server SooperWizer
ALTER TABLE [Essentials].[PieceWiseCutReport]
ADD StyleTemplateID INT,
CONSTRAINT FK_PieceWiseCutReport_StyleTemplate
FOREIGN KEY (StyleTemplateID) REFERENCES [Essentials].[StyleTemplate](StyleTemplateID);



-- MYSQL SooperWizer

ALTER TABLE sooperwizer.piece_wise_cut_report
ADD COLUMN StyleTemplateID INT,
ADD CONSTRAINT FK_PieceWiseCutReport_StyleTemplate
FOREIGN KEY (StyleTemplateID) REFERENCES style_template(StyleTemplateID);






USE ilapparel_sooperwizer;

ALTER TABLE ilapparel_sooperwizer.piece_wise_cut_report
ADD CONSTRAINT FK_PieceWiseCutReport_StyleTemplate
FOREIGN KEY (StyleTemplateID) REFERENCES style_template(StyleTemplateID);



-- =================================================
-- =================================================

ALTER TABLE sooperwizer_demo.piece_wise_cut_report
DROP CONSTRAINT FK_piece_wise_cut_report_style_template;

ALTER TABLE sooperwizer_demo.piece_wise_cut_report
ADD CONSTRAINT FK_PieceWiseCutReport_StyleTemplate
FOREIGN KEY (StyleTemplateID) REFERENCES style_template(StyleTemplateID);




-- ======================================================
-- ======================================================


CREATE TABLE IF NOT EXISTS EndLineSessionNew(
EndLineSessionNewID INT NOT NULL AUTO_INCREMENT,
LineID INT,
SectionID INT,
BundleID INT,
PieceID INT,
UserID INT,
Status TINYINT DEFAULT 0,
CreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
UpdatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT PK_EndLineSessionNew PRIMARY KEY(EndLineSessionNewID),
CONSTRAINT FK_EndLineSessionNew_Line FOREIGN KEY(LineID) REFERENCES line(LineID),
CONSTRAINT FK_EndLineSessionNew_Section FOREIGN KEY(SectionID) REFERENCES section(SectionID),
CONSTRAINT FK_EndLineSessionNew_CutReport FOREIGN KEY(BundleID) REFERENCES cut_report(BundleID),
CONSTRAINT FK_EndLineSessionNew_PieceWiseCutReport FOREIGN KEY(PieceID) REFERENCES piece_wise_cut_report(PieceID),
CONSTRAINT FK_EndLineSessionNew_UserID FOREIGN KEY(UserID) REFERENCES user(UserID),
CONSTRAINT CK_EndLineSessionNew_Status CHECK(Status IN(0,1,2,3,4,5,6,7,8)));

















-- ===============================================================================
-- ===============================================================================

CREATE TABLE IF NOT EXISTS EndLineSessionNew(
EndLineSessionNewID INT NOT NULL AUTO_INCREMENT,
LineID INT NOT NULL,
SectionID INT NOT NULL,
BundleID INT NOT NULL,
PieceID INT NOT NULL,
UserID INT NOT NULL,
Status TINYINT DEFAULT 0,
CreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
UpdatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT PK_EndLineSessionNew PRIMARY KEY(EndLineSessionNewID),
CONSTRAINT FK_EndLineSessionNew_Line FOREIGN KEY(LineID) REFERENCES line(LineID),
CONSTRAINT FK_EndLineSessionNew_Section FOREIGN KEY(SectionID) REFERENCES section(SectionID),
CONSTRAINT FK_EndLineSessionNew_CutReport FOREIGN KEY(BundleID) REFERENCES cut_report(BundleID),
CONSTRAINT FK_EndLineSessionNew_PieceWiseCutReport FOREIGN KEY(PieceID) REFERENCES piece_wise_cut_report(PieceID),
CONSTRAINT FK_EndLineSessionNew_User FOREIGN KEY(UserID) REFERENCES user(UserID),
CONSTRAINT CK_EndLineSessionNew_Status CHECK(Status IN(0,1,2,3,4,5,6,7,8)));


-- INSERT INTO EndLineSessionNew(LineID,SectionID,BundleID,PieceID,UserID)
-- VALUES(1,1,1,1,1);


CREATE TABLE IF NOT EXISTS EndLineFaultLogNew(
EndLineFaultLogNewID INT NOT NULL AUTO_INCREMENT,
EndLinSessionNewID INT NOT NULL,
FaultID INT NOT NULL,
FaultCount INT NOT NULL,
PieceWiseScanID INT NOT NULL,
CreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
UpdatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT PK_EndLineFaultLogNew PRIMARY KEY(EndLineFaultLogNewID),
CONSTRAINT FK_EndLineFaultLogNew_EndLineSessionNew FOREIGN KEY(EndLineSessionNewID) REFERENCES EndLineSessionNew(EndLineSessionNewID),
CONSTRAINT FK_EndLineFaultLogNew_Fault FOREIGN KEY(FaultID) REFERENCES fault(FaultID),
CONSTRAINT FK_EndLineFaultLogNew_PieceWiseScan FOREIGN KEY(PieceWiseScanID) REFERENCES piece_wise_scan(PieceWiseScanID)
);


-- INSERT INTO EndLineFaultLogNew(EndLinSessionNewID,FaultID,FaultCount,PieceWiseScanID)
-- VALUES (1,1,3,1);